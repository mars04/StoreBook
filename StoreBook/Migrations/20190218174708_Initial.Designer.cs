// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreBook.Models;

namespace StoreBook.Migrations
{
    [DbContext(typeof(StoreBookContext))]
    [Migration("20190218174708_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StoreBook.Models.Author", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("StoreBook.Models.Book", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorID");

                    b.Property<string>("Description");

                    b.Property<int?>("EditorID");

                    b.Property<int?>("GenreID");

                    b.Property<string>("ImageURL");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<int?>("PublishID");

                    b.Property<int?>("SeriesID");

                    b.HasKey("ID");

                    b.HasIndex("AuthorID");

                    b.HasIndex("EditorID");

                    b.HasIndex("GenreID");

                    b.HasIndex("PublishID");

                    b.HasIndex("SeriesID");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("StoreBook.Models.Editor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Editor");
                });

            modelBuilder.Entity("StoreBook.Models.Genre", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Genre");
                });

            modelBuilder.Entity("StoreBook.Models.Publish", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Publish");
                });

            modelBuilder.Entity("StoreBook.Models.Series", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("StoreBook.Models.Book", b =>
                {
                    b.HasOne("StoreBook.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorID");

                    b.HasOne("StoreBook.Models.Editor", "Editor")
                        .WithMany()
                        .HasForeignKey("EditorID");

                    b.HasOne("StoreBook.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreID");

                    b.HasOne("StoreBook.Models.Publish", "Publish")
                        .WithMany()
                        .HasForeignKey("PublishID");

                    b.HasOne("StoreBook.Models.Series", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesID");
                });
#pragma warning restore 612, 618
        }
    }
}
